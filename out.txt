Hydra compiler, version 0.1
Copyright © 2020-2020 by Jesús Perea Villegas based in A. Ortiz Buttercup Compiler, ITESM CEM.
This program is free software; you may redistribute it under the terms of
the GNU General Public License version 3 or later.
This program has absolutely no warranty.

Included in this release:
   * Lexical analysis

===== Tokens from: "code_samples/003_palindrome.hydra" =====
[1] [ID, "is_palindrome", @(7, 1)]
[2] [OPEN_PAR, "(", @(7, 14)]
[3] [ID, "str", @(7, 15)]
[4] [CLOSE_PAR, ")", @(7, 18)]
[5] [OPEN_CURLY, "{", @(7, 20)]
[6] [VAR, "var", @(8, 5)]
[7] [ID, "start", @(8, 9)]
[8] [COMMA, ",", @(8, 14)]
[9] [ID, "finish", @(8, 16)]
[10] [EOL, ";", @(8, 22)]
[11] [ID, "start", @(9, 5)]
[12] [ASSIGN, "=", @(9, 11)]
[13] [LIT_INT, "0", @(9, 13)]
[14] [EOL, ";", @(9, 14)]
[15] [ID, "finish", @(10, 5)]
[16] [ASSIGN, "=", @(10, 12)]
[17] [SIZE, "size", @(10, 14)]
[18] [OPEN_PAR, "(", @(10, 18)]
[19] [ID, "str", @(10, 19)]
[20] [CLOSE_PAR, ")", @(10, 22)]
[21] [NEG, "-", @(10, 24)]
[22] [LIT_INT, "1", @(10, 26)]
[23] [EOL, ";", @(10, 27)]
[24] [WHILE, "while", @(11, 5)]
[25] [OPEN_PAR, "(", @(11, 11)]
[26] [ID, "start", @(11, 12)]
[27] [LESS, "<", @(11, 18)]
[28] [ID, "finish", @(11, 20)]
[29] [CLOSE_PAR, ")", @(11, 26)]
[30] [OPEN_CURLY, "{", @(11, 28)]
[31] [IF, "if", @(12, 9)]
[32] [OPEN_PAR, "(", @(12, 12)]
[33] [GET, "get", @(12, 13)]
[34] [OPEN_PAR, "(", @(12, 16)]
[35] [ID, "str", @(12, 17)]
[36] [COMMA, ",", @(12, 20)]
[37] [ID, "start", @(12, 22)]
[38] [CLOSE_PAR, ")", @(12, 27)]
[39] [NOTEQUALTO, "!=", @(12, 29)]
[40] [GET, "get", @(12, 32)]
[41] [OPEN_PAR, "(", @(12, 35)]
[42] [ID, "str", @(12, 36)]
[43] [COMMA, ",", @(12, 39)]
[44] [ID, "finish", @(12, 41)]
[45] [CLOSE_PAR, ")", @(12, 47)]
[46] [CLOSE_PAR, ")", @(12, 48)]
[47] [OPEN_CURLY, "{", @(12, 50)]
[48] [RETURN, "return", @(13, 13)]
[49] [FALSE, "false", @(13, 20)]
[50] [EOL, ";", @(13, 25)]
[51] [CLOSE_CURLY, "}", @(14, 9)]
[52] [ID, "start", @(15, 9)]
[53] [PLUSPLUS, "++", @(15, 14)]
[54] [EOL, ";", @(15, 16)]
[55] [ID, "finish", @(16, 9)]
[56] [LESSLESS, "--", @(16, 15)]
[57] [EOL, ";", @(16, 17)]
[58] [CLOSE_CURLY, "}", @(17, 5)]
[59] [RETURN, "return", @(18, 5)]
[60] [TRUE, "true", @(18, 12)]
[61] [EOL, ";", @(18, 16)]
[62] [CLOSE_CURLY, "}", @(19, 1)]
[63] [MAIN, "main", @(21, 1)]
[64] [OPEN_PAR, "(", @(21, 5)]
[65] [CLOSE_PAR, ")", @(21, 6)]
[66] [OPEN_CURLY, "{", @(21, 8)]
[67] [VAR, "var", @(22, 5)]
[68] [ID, "str", @(22, 9)]
[69] [COMMA, ",", @(22, 12)]
[70] [ID, "option", @(22, 14)]
[71] [EOL, ";", @(22, 20)]
[72] [WHILE, "while", @(23, 5)]
[73] [OPEN_PAR, "(", @(23, 11)]
[74] [TRUE, "true", @(23, 12)]
[75] [CLOSE_PAR, ")", @(23, 16)]
[76] [OPEN_CURLY, "{", @(23, 18)]
[77] [PRINTS, "prints", @(24, 9)]
[78] [OPEN_PAR, "(", @(24, 15)]
[79] [LIT_STR, ""Input a string: "", @(24, 16)]
[80] [CLOSE_PAR, ")", @(24, 34)]
[81] [EOL, ";", @(24, 35)]
[82] [ID, "str", @(25, 9)]
[83] [ASSIGN, "=", @(25, 13)]
[84] [READS, "reads", @(25, 15)]
[85] [OPEN_PAR, "(", @(25, 20)]
[86] [CLOSE_PAR, ")", @(25, 21)]
[87] [EOL, ";", @(25, 22)]
[88] [PRINTS, "prints", @(26, 9)]
[89] [OPEN_PAR, "(", @(26, 15)]
[90] [LIT_STR, ""The string \""", @(26, 16)]
[91] [CLOSE_PAR, ")", @(26, 31)]
[92] [EOL, ";", @(26, 32)]
[93] [PRINTS, "prints", @(27, 9)]
[94] [OPEN_PAR, "(", @(27, 15)]
[95] [ID, "str", @(27, 16)]
[96] [CLOSE_PAR, ")", @(27, 19)]
[97] [EOL, ";", @(27, 20)]
[98] [PRINTS, "prints", @(28, 9)]
[99] [OPEN_PAR, "(", @(28, 15)]
[100] [LIT_STR, ""\" is "", @(28, 16)]
[101] [CLOSE_PAR, ")", @(28, 24)]
[102] [EOL, ";", @(28, 25)]
[103] [IF, "if", @(29, 9)]
[104] [OPEN_PAR, "(", @(29, 12)]
[105] [NOT, "!", @(29, 13)]
[106] [ID, "is_palindrome", @(29, 14)]
[107] [OPEN_PAR, "(", @(29, 27)]
[108] [ID, "str", @(29, 28)]
[109] [CLOSE_PAR, ")", @(29, 31)]
[110] [CLOSE_PAR, ")", @(29, 32)]
[111] [OPEN_CURLY, "{", @(29, 34)]
[112] [PRINTS, "prints", @(30, 13)]
[113] [OPEN_PAR, "(", @(30, 19)]
[114] [LIT_STR, ""NOT "", @(30, 20)]
[115] [CLOSE_PAR, ")", @(30, 26)]
[116] [EOL, ";", @(30, 27)]
[117] [CLOSE_CURLY, "}", @(31, 9)]
[118] [PRINTS, "prints", @(32, 9)]
[119] [OPEN_PAR, "(", @(32, 15)]
[120] [LIT_STR, ""a palindrome.\n"", @(32, 16)]
[121] [CLOSE_PAR, ")", @(32, 33)]
[122] [EOL, ";", @(32, 34)]
[123] [PRINTS, "prints", @(33, 9)]
[124] [OPEN_PAR, "(", @(33, 15)]
[125] [LIT_STR, ""Check another string? "", @(33, 16)]
[126] [CLOSE_PAR, ")", @(33, 40)]
[127] [EOL, ";", @(33, 41)]
[128] [ID, "option", @(34, 9)]
[129] [ASSIGN, "=", @(34, 16)]
[130] [READS, "reads", @(34, 18)]
[131] [OPEN_PAR, "(", @(34, 23)]
[132] [CLOSE_PAR, ")", @(34, 24)]
[133] [EOL, ";", @(34, 25)]
[134] [IF, "if", @(35, 9)]
[135] [OPEN_PAR, "(", @(35, 12)]
[136] [SIZE, "size", @(35, 13)]
[137] [OPEN_PAR, "(", @(35, 17)]
[138] [ID, "option", @(35, 18)]
[139] [CLOSE_PAR, ")", @(35, 24)]
[140] [EQUALTO, "==", @(35, 26)]
[141] [LIT_INT, "0", @(35, 29)]
[142] [CLOSE_PAR, ")", @(35, 30)]
[143] [OPEN_CURLY, "{", @(35, 32)]
[144] [ID, "option", @(36, 13)]
[145] [ASSIGN, "=", @(36, 20)]
[146] [LIT_CHAR, "'N'", @(36, 22)]
[147] [EOL, ";", @(36, 25)]
[148] [CLOSE_CURLY, "}", @(37, 9)]
[149] [ELSE, "else", @(37, 11)]
[150] [OPEN_CURLY, "{", @(37, 16)]
[151] [ID, "option", @(38, 13)]
[152] [ASSIGN, "=", @(38, 20)]
[153] [GET, "get", @(38, 22)]
[154] [OPEN_PAR, "(", @(38, 25)]
[155] [ID, "option", @(38, 26)]
[156] [COMMA, ",", @(38, 32)]
[157] [LIT_INT, "0", @(38, 34)]
[158] [CLOSE_PAR, ")", @(38, 35)]
[159] [EOL, ";", @(38, 36)]
[160] [CLOSE_CURLY, "}", @(39, 9)]
[161] [IF, "if", @(40, 9)]
[162] [OPEN_PAR, "(", @(40, 12)]
[163] [ID, "option", @(40, 13)]
[164] [NOTEQUALTO, "!=", @(40, 20)]
[165] [LIT_CHAR, "'Y'", @(40, 23)]
[166] [AND, "&&", @(40, 27)]
[167] [ID, "option", @(40, 30)]
[168] [NOTEQUALTO, "!=", @(40, 37)]
[169] [LIT_CHAR, "'y'", @(40, 40)]
[170] [CLOSE_PAR, ")", @(40, 43)]
[171] [OPEN_CURLY, "{", @(40, 45)]
[172] [BREAK, "break", @(41, 13)]
[173] [EOL, ";", @(41, 18)]
[174] [CLOSE_CURLY, "}", @(42, 9)]
[175] [CLOSE_CURLY, "}", @(43, 5)]
[176] [CLOSE_CURLY, "}", @(44, 1)]
[177] [EOF, "", @(44, 1)]
